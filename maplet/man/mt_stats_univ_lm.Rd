% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mt_stats_univ_lm.R
\name{mt_stats_univ_lm}
\alias{mt_stats_univ_lm}
\title{Univariate GLMs}
\usage{
mt_stats_univ_lm(
  D,
  formula,
  stat_name,
  samp_filter,
  all_terms = FALSE,
  n_cores = 1,
  return_warnings = FALSE
)
}
\arguments{
\item{D}{\code{SummarizedExperiment} input.}

\item{formula}{Left-hand side of formula to be put into glm function.}

\item{stat_name}{Name under which this comparison will be stored, must be unique to all other statistical results.}

\item{samp_filter}{Term which samples to filter to first (e.g. used if the data contains >2 groups but the user wants to
run a two-group comparison).}

\item{all_terms}{Whether to return all terms in formula in the statistical results table. Default: FALSE.}

\item{n_cores}{Number of cores to use for mclapply. More than one core will not work on Windows platforms. Default: 1.}

\item{return_warnings}{Whether to add a Boolean column indicating whether a feature model
returned a warning. Currently only checks for a failure to converge warnings. See
\code{\link[lme4]{isSingular()}}. Default: FALSE.}
}
\value{
$result$output: Statistics object.
}
\description{
\enumerate{
  \item Will treat the first term of the formula as outcome.
  \item If outcome has >2 factors, will perform ANOVA.
  \item If random effect term is contained, will used lmer function (can also be used for paired analysis, e.g. before/after).
}
}
\details{
Computes univariate GLM for each feature.
}
\examples{
\donttest{# run lm with no confounders, "Group" as outcome
# filter to groups "Li_2" and "Li_5"
# name the comparison "Li's"
... \%>\%
 mt_stats_univ_lm(
   formula      = ~ Group,
   samp_filter = (Group \%in\% c("Li_2","Li_5")),
   stat_name         = "Li's"
 ) \%>\% ...
 }

}
\author{
JK, JZ
}
